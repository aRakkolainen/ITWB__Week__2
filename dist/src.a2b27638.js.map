{"version":3,"sources":["src/index.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/bundle-url.js","../../../AppData/Roaming/npm/node_modules/parcel-bundler/src/builtins/css-loader.js"],"names":["require","insertNewRow","givenUsername","table","document","getElementById","givenEmail","value","givenAddress","newRow","createElement","numberOfRows","rows","length","setAttribute","usernameCell","emailCell","addressCell","adminstatusCell","innerText","adminStatusCB","checked","appendChild","checkUsername","usernameExistence","rowNumber","i","cells","console","log","rowID","currentRow","submitBtn","addEventListener","emptyTableBtn","deleteRow","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","match","getBaseURL","url","replace","exports","bundle","updateLink","link","newLink","cloneNode","onload","remove","href","split","Date","now","parentNode","insertBefore","nextSibling","cssTimeout","reloadCSS","setTimeout","links","querySelectorAll","module"],"mappings":"ACAA,ACAA,IDAIoC,ACAAY,MAAM,GDAG,ACAAhD,GDAG,IAAI,ACAA,CAAC,cAAc,CAAC;ADCpC,ACCA,SDDSqC,ACCAY,UAAUA,CAACC,IAAI,EAAE,CDDCb,CAAA,EAAG;ADD9BrC,ECEE,ACCA,IDDI,ACCAmD,CDDCf,ADFP,MEGa,GDDG,ACCAc,EDDE,ECCE,CAACE,SAAS,CAAC,CAAC;AFFhC,EEGED,EDDEf,KCCK,CAACiB,GDDG,GAAGf,ACCA,GAAG,SDDS,CAAC,CAAC,CCCC;AFF/B,ECEE,ECCEY,IAAI,CAACI,MAAM,CAAC,CAAC;AFDjB,ECEE,ACAA,CAAC,MDAMlB,ADFAnC,SCES,GDFGA,CAACC,aAAa,EAAE;ACGrC,ECAEiD,AFFA,IAAIhD,GEEG,CAACoD,CFFC,GEEG,AFFAnD,GEEG8C,IAAI,CAACK,AFFA,CAAClD,GEEG,CAACmD,KAAK,CAAC,GAAG,CAAC,AFFA,CEEC,AFFA,CEEC,CAAC,GAAG,GAAG,CFFC,CAAC,CEECC,IAAI,CAACC,GAAG,CAAC,CAAC;ADE3D,ECDER,AFFA,IEEI,AFFA5C,CEECqD,EDCErB,ODHO,CEEC,CAACsB,CFFCxD,ECGEkC,CAAA,EAAG,GDHG,CAACjC,EEEE,CAAC8C,OAAO,EAAED,EFFE,CAAC,CEEC,CAACW,WAAW,AFFA,CEEC,AFFA,CAACtD,KAAK;AEG/D,EDCE,ADHA,IAAIC,YAAY,GAAGJ,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC,CAACE,KAAK;AEInE,EDAE,ADHA,EEGEuD,EDAE,ADHArD,MAAM,EEGE,CFHCL,EEGE,IAAI,EFHE,CAACM,aAAa,CAAC,IAAI,CAAC;AEI3C,EFHE,ECGE,EDHEC,GEGGoD,CDAC,IAAIxB,ICAIwB,AFHA,CCGC,ACAD,CDAA,CAAC,ACAE,AFHA3D,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACO,IAAI,CAACC,MAAM,GAAC,CAAC;ECI7E,ACAA,AFHAJ,CCGC,CAAC,ECAEqD,EFHE,CAAChD,ECGE0B,GAAG,EAAE,ACAA,EAAE,GFHG,CACjB,IAAI,EACJ,KAAK,GAAG7B,YACV,CAAC;EACD,E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","file":"src.a2b27638.js","sourceRoot":"..","sourcesContent":["import \"./styles.css\";\r\n//How to insert new row to the table and filling it with content (the function insertNewRow) is implemented based on this tutorial: https://www.tutorialspoint.com/How-to-add-rows-to-a-table-using-JavaScript-DOM\r\n//How to check the length of table: https://stackoverflow.com/questions/3053503/javascript-to-get-rows-count-of-a-html-table\r\n\r\nfunction insertNewRow(givenUsername) {\r\n  let table = document.getElementById(\"content\");\r\n  let givenEmail = document.getElementById(\"input-email\").value;\r\n  let givenAddress = document.getElementById(\"input-address\").value;\r\n  let newRow = document.createElement(\"tr\");\r\n  let numberOfRows = document.getElementById(\"information-table\").rows.length-1\r\n  newRow.setAttribute(\r\n    \"id\",\r\n    \"row\" + numberOfRows\r\n  );\r\n  let usernameCell = document.createElement(\"td\");\r\n  usernameCell.setAttribute(\"id\", \"username\" + numberOfRows);\r\n  let emailCell = document.createElement(\"td\");\r\n  let addressCell = document.createElement(\"td\");\r\n  let adminstatusCell = document.createElement(\"td\");\r\n  //let pictureCell = document.createElement(\"td\");\r\n  if (givenUsername !== \"\") {\r\n    usernameCell.innerText = givenUsername;\r\n  }\r\n  if (givenEmail !== \"\") {\r\n    emailCell.innerText = givenEmail;\r\n  }\r\n\r\n  if (givenAddress !== \"\") {\r\n    addressCell.innerText = givenAddress;\r\n  }\r\n  // Checking the status of checkbox is implemented based on this tutorial: https://www.javascripttutorial.net/javascript-dom/javascript-checkbox/\r\n  const adminStatusCB = document.getElementById(\"input-admin\");\r\n\r\n  if (adminStatusCB.checked === true) {\r\n    adminstatusCell.innerText = \"X\";\r\n  } else {\r\n    adminstatusCell.innerText = \"-\";\r\n  }\r\n  // This is based on the course material and this tutorial: https://developer.mozilla.org/en-US/docs/Web/API/File_API/Using_files_from_web_applications#example_using_object_urls_to_display_images\r\n  //Checking if provided image is 64px tall and wide (meaning its size in bytes is 16384 at maximum: https://w3collective.com/restrict-file-size-javascript/)\r\n  /*const imageInput = document.getElementById(\"input-image\");\r\n  const imageFile = document.getElementById(\"input-image\").files[0];\r\n  if (imageInput.files.length > 0) {\r\n    const fileSize = imageInput.files.item(0).size; \r\n    if (fileSize > 16384) {\r\n      console.log(\"Your image is too big!\")\r\n    } else {\r\n      let imgSrc = \"\";\r\n    if (!imageFile) return;\r\n    imgSrc = URL.createObjectURL(imageFile);\r\n    let profilePic = document.createElement(\"div\");\r\n    let pic = document.createElement(\"img\");\r\n    pic.style.display = \"inline-block\";\r\n    pic.src = imgSrc;\r\n    pic.id = \"img\" + numberOfRows;\r\n    profilePic.appendChild(pic);\r\n    pictureCell.appendChild(profilePic);\r\n    }\r\n  }*/\r\n  newRow.appendChild(usernameCell);\r\n  newRow.appendChild(emailCell);\r\n  newRow.appendChild(addressCell);\r\n  newRow.appendChild(adminstatusCell);\r\n  //newRow.appendChild(pictureCell);\r\n  table.appendChild(newRow);\r\n}\r\n//Hint for this function was taken from this stackoverflow post: https://stackoverflow.com/questions/60874001/how-to-check-if-a-value-exist-in-a-table-and-return-the-value-of-a-cell-in-that\r\nfunction checkUsername(givenUsername) {\r\n  const table = document.getElementById(\"information-table\");\r\n  let rows = table.rows;\r\n  let usernameExistence = false;\r\n  let rowNumber = 0;\r\n  for (let i = 1; i < rows.length; i++) {\r\n    if (rows[i].cells[0].innerText === givenUsername) {\r\n      usernameExistence = true;\r\n      rowNumber = i;\r\n      break;\r\n    }\r\n  }\r\n  //console.log(\"Username found at row: \" + rowNumber)\r\n\r\n  if (usernameExistence === true) {\r\n    rowNumber -= 1; \r\n    console.log(\"Username found with rowID: \" + rowNumber);\r\n    let rowID = \"row\" + rowNumber;\r\n    let currentRow = document.getElementById(rowID);\r\n    console.log(currentRow);\r\n    let givenEmail = document.getElementById(\"input-email\").value;\r\n    let givenAddress = document.getElementById(\"input-address\").value;\r\n    const adminStatusCB = document.getElementById(\"input-admin\");\r\n    //editing username (not necessary though)\r\n    currentRow.cells[0].innerText = givenUsername;\r\n    // Editing email address\r\n    currentRow.cells[1].innerText = givenEmail;\r\n    // Editing given address\r\n    currentRow.cells[2].innerText = givenAddress;\r\n    // Editing admin status\r\n    if (adminStatusCB.checked === true) {\r\n      currentRow.cells[3].innerText = \"X\";\r\n    } else {\r\n      currentRow.cells[3].innerText = \"-\";\r\n    }\r\n\r\n    // Editing profile image\r\n    /*let imgID = \"img\" + rowNumber;\r\n    let profilePic = document.getElementById(imgID);\r\n    if (profilePic.src != null) {\r\n      let currentImgSrc = profilePic.src;\r\n    const imageInput = document.getElementById(\"input-image\");\r\n    const imageFile = document.getElementById(\"input-image\").files[0];\r\n    let newImgSrc = \"\";\r\n    if (imageInput.files.length > 0 && currentImgSrc != null) {\r\n      const imageSize = imageInput.files.item(0).size; \r\n      if (imageSize > 16384) {\r\n        console.log(\"New image is too big!\");\r\n      }\r\n      else {\r\n        if (!imageFile) return;\r\n    newImgSrc = URL.createObjectURL(imageFile);\r\n\r\n    if (currentImgSrc !== newImgSrc) {\r\n      profilePic.src = newImgSrc;\r\n    }\r\n\r\n      }\r\n    }\r\n    }\r\n  */  \r\n  } else {\r\n    insertNewRow(givenUsername);\r\n  }\r\n}\r\nconst submitBtn = document.getElementById(\"submit-data\");\r\nsubmitBtn.addEventListener(\"click\", function () {\r\n  let givenUsername = document.getElementById(\"input-username\").value;\r\n  checkUsername(givenUsername);\r\n});\r\n\r\nconst emptyTableBtn = document.getElementById(\"empty-table\");\r\nemptyTableBtn.addEventListener(\"click\", function () {\r\n  let table = document.getElementById(\"information-table\");\r\n  for (var i = 1; table.rows.length - 1; i = i++) {\r\n    //How to get the length (number of rows in table): https://www.w3schools.com/jsref/coll_table_rows.asp\r\n    table.deleteRow(i);\r\n  }\r\n});\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var bundle = require('./bundle-url');\n\nfunction updateLink(link) {\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    link.remove();\n  };\n  newLink.href = link.href.split('?')[0] + '?' + Date.now();\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\n\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      if (bundle.getBaseURL(links[i].href) === bundle.getBundleURL()) {\n        updateLink(links[i]);\n      }\n    }\n\n    cssTimeout = null;\n  }, 50);\n}\n\nmodule.exports = reloadCSS;\n"]}